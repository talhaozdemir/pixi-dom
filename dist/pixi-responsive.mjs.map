{"version":3,"file":"pixi-responsive.mjs","sources":["../src/HTMLContainer.ts","../src/Responsive.ts"],"sourcesContent":["import * as PIXI from \"pixi.js\";\r\nimport { HTMLContainerConfig } from \"../global\";\r\n\r\nexport class HTMLContainer extends PIXI.Container {\r\n\r\n  /**\r\n  * This is a holder wrapper that contains HTML elements.\r\n  */\r\n  public rootDiv: HTMLDivElement;\r\n\r\n  /**\r\n  *  This is an array of all the HTML elements that are present in the rootDiv.\r\n  */\r\n  public htmlElements: HTMLElement[] = [];\r\n\r\n  /**\r\n   * The HTML content that will be injected into the rootDiv.\r\n   */\r\n  private _htmlContent: string;\r\n\r\n  /**\r\n   * The CSS content that will be injected into the head tag.\r\n   */\r\n  private _cssContent: string;\r\n\r\n  /**\r\n   * The style tag that will include the CSS content.\r\n   */\r\n  private _styleTag: HTMLStyleElement;\r\n\r\n  /**\r\n   * The debug configuration object. A Graphics object will be created to visualize the HTML elements.\r\n   * Instead of using debug mode, you can also play with the zIndex of the rootDiv  \r\n   * Length of htmlElements array will determine the number of colors generated between color1 and color2.\r\n   * This object contains the following properties:\r\n   * @param {boolean} enabled - A boolean that enables or disables the debug mode.\r\n   * @param {number} color1 - The start color of the debug mode.\r\n   * @param {number} color2 - The end color of the debug mode.\r\n   */\r\n  private _debug: {\r\n    enabled: boolean;\r\n    color1: number;\r\n    color2: number;\r\n  } = {\r\n      enabled: false,\r\n      color1: 0x92b7d1,\r\n      color2: 0x2d86c4,\r\n    };\r\n\r\n  /**\r\n   * The constructor of the Container class.\r\n   * @param {HTMLContainerConfig} config - The configuration object for the Container class.\r\n   * @param {string} config.html - The HTML content that will be injected into the rootDiv.\r\n   * @param {string} config.css - The CSS content that will be injected into the head tag for the rootDiv.\r\n   * @param {object} config.debug - The debug configuration object.\r\n   */\r\n  constructor(config: HTMLContainerConfig) {\r\n    super();\r\n\r\n    this._debug = config.debug;\r\n\r\n    // Remove all newlines and extra spaces from the HTML and CSS content\r\n    this._htmlContent = config.html.replace(/\\n/g, \"\").replace(/\\s{2,}/g, \"\");\r\n    this._cssContent = config.css.replace(/\\n/g, \"\").replace(/\\s{2,}/g, \"\");\r\n\r\n    this.initializeRootDiv();\r\n    this.injectCss();\r\n    this.appendRootToBody();\r\n    this.collectHtmlElements(this.rootDiv);\r\n    this.renderDom();\r\n  }\r\n\r\n  /**\r\n   * Initializes the rootDiv and sets its style properties.\r\n   */\r\n  private initializeRootDiv() {\r\n    this.rootDiv = document.createElement(\"div\");\r\n    this.rootDiv.style.pointerEvents = \"none\";\r\n    this.rootDiv.style.position = \"absolute\";\r\n    this.rootDiv.style.top = \"0\";\r\n    this.rootDiv.style.left = \"0\";\r\n    this.rootDiv.style.width = \"100%\";\r\n    this.rootDiv.style.height = \"100%\";\r\n    this.rootDiv.innerHTML = this._htmlContent;\r\n  }\r\n\r\n  /**\r\n   * Inject the CSS content into the head tag.\r\n   */\r\n  private injectCss() {\r\n    this._styleTag = document.createElement(\"style\");\r\n    this._styleTag.textContent = this._cssContent;\r\n    document.head.appendChild(this._styleTag);\r\n  }\r\n\r\n  /**\r\n   * This method appends the rootDiv to the body tag.\r\n   */\r\n  private appendRootToBody() {\r\n    document.body.appendChild(this.rootDiv);\r\n  }\r\n\r\n  /**\r\n   * Render the HTML elements into the PIXI Container object.\r\n   */\r\n  private renderDom() {\r\n    let debugColors: number[] = [];\r\n    let debugGraphics = null;\r\n\r\n    if (this._debug?.enabled) {\r\n      debugGraphics = new PIXI.Graphics();\r\n      debugGraphics.label = \"debugGraphics\";\r\n      this.addChildAt(debugGraphics, 0);\r\n    }\r\n\r\n    this.resize = () => {\r\n      if (this._debug?.enabled) {\r\n        debugGraphics.clear();\r\n      }\r\n    };\r\n\r\n    if (this._debug?.enabled) {\r\n      debugColors = generateColors(this.htmlElements.length, this._debug?.color1, this._debug?.color2);\r\n    }\r\n\r\n    this.htmlElements.forEach((child, i) => {\r\n      const wrapper = new PIXI.Container();\r\n\r\n      this.addChild(wrapper);\r\n      wrapper.label = child.id || child.className || `Element_${i}`;\r\n\r\n      wrapper.resize = () => {\r\n        const rect = child.getBoundingClientRect();\r\n        wrapper.baseWidth = rect.width;\r\n        wrapper.baseHeight = rect.height;\r\n        wrapper.position.set(rect.x, rect.y);\r\n\r\n        // console.log({\r\n        //   name: wrapper.label,\r\n        //   x: rect.x,\r\n        //   y: rect.y,\r\n        //   width: rect.width,\r\n        //   height: rect.height,\r\n        // });\r\n\r\n        if (this._debug?.enabled) {\r\n          debugGraphics.rect(rect.x, rect.y, rect.width, rect.height);\r\n          debugGraphics.fill({ color: debugColors[i] });\r\n        }\r\n      };\r\n\r\n      wrapper.resize();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * This method collects all the HTML elements that are present in the rootDiv.\r\n   * @param {HTMLElement} parent - The parent HTML element.\r\n   */\r\n  private collectHtmlElements(parent: HTMLElement) {\r\n    for (let i = 0; i < parent.children.length; i++) {\r\n      const child = parent.children[i] as HTMLElement;\r\n      if (child.tagName !== \"DIV\") {\r\n        continue;\r\n      }\r\n      this.htmlElements.push(child);\r\n      this.collectHtmlElements(child);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Destroys the Container object and removes the rootDiv and styleTag from the DOM.\r\n   */\r\n  public destroy(...args: any[]): void {\r\n\r\n    super.destroy(...args);\r\n\r\n    if (this.rootDiv.parentElement) {\r\n      this.rootDiv.parentElement.removeChild(this.rootDiv);\r\n    }\r\n\r\n    if (this._styleTag.parentElement) {\r\n      this._styleTag.parentElement.removeChild(this._styleTag);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * This function generates an array of colors between the startColor and endColor.\r\n * @param {number} count - The number of colors to generate.\r\n * @param {number} startColor - The start color of the gradient.\r\n * @param {number} endColor - The end color of the gradient.\r\n * @returns {number[]} - An array of colors between the startColor and endColor.\r\n */\r\nfunction generateColors(count: number, startColor: number, endColor: number): number[] {\r\n  const colors = [];\r\n  const startR = (startColor >> 16) & 0xff;\r\n  const startG = (startColor >> 8) & 0xff;\r\n  const startB = startColor & 0xff;\r\n\r\n  const endR = (endColor >> 16) & 0xff;\r\n  const endG = (endColor >> 8) & 0xff;\r\n  const endB = endColor & 0xff;\r\n\r\n  for (let i = 0; i < count; i++) {\r\n    const t = i / (count - 1);\r\n    const r = Math.round(startR + t * (endR - startR));\r\n    const g = Math.round(startG + t * (endG - startG));\r\n    const b = Math.round(startB + t * (endB - startB));\r\n    const color = (r << 16) | (g << 8) | b;\r\n    colors.push(color);\r\n  }\r\n  return colors;\r\n}\r\n","import { Container, Point, Renderer } from \"pixi.js\";\r\n\r\nexport class Responsive {\r\n  renderer: Renderer<HTMLCanvasElement>;\r\n  stage: Container;\r\n  constructor(renderer: Renderer<HTMLCanvasElement>, stage: Container) {\r\n    this.renderer = renderer;\r\n    this.stage = stage;\r\n    window.addEventListener(\"resize\", this.resize.bind(this));\r\n\r\n    this.resize();\r\n  }\r\n\r\n  public resize(): void {\r\n    const width: number = window.innerWidth;\r\n    const height: number = window.innerHeight;\r\n\r\n    this.renderer.resize(width, height);\r\n    this.stage.baseWidth = width;\r\n    this.stage.baseHeight = height;\r\n\r\n    this.getAllChildren(this.stage).forEach((child) => {\r\n      const childParent = child.parent as Container;\r\n\r\n      if (!childParent) return;\r\n\r\n      if (!child.resize) {\r\n        child.resize = () => this.applyResizeData(child);\r\n      }\r\n\r\n      child.resize(childParent.baseWidth, childParent.baseHeight);\r\n    });\r\n  }\r\n\r\n  private applyResizeData(child: any): void {\r\n    this.scaleChildWithResizeData(child);\r\n    this.locateChildWithResizeData(child);\r\n  }\r\n\r\n\r\n  private scaleChildWithResizeData(child: Container): void {\r\n    const orientedData = window.innerWidth > window.innerHeight && child.resizeData?.landscape ? child.resizeData?.landscape : child.resizeData?.portrait;\r\n\r\n    if (!orientedData?.scale) return;\r\n\r\n    const childParent = child.parent as Container;\r\n\r\n    if (orientedData.scale.type === \"absolute\") {\r\n      child.scale.set(orientedData.scale.x, orientedData.scale.y);\r\n    } else {\r\n      const parentWidth = childParent.baseWidth;\r\n      const parentHeight = childParent.baseHeight;\r\n      const widthRatio = (parentWidth * orientedData.scale.x) / child.baseWidth;\r\n      const heightRatio = (parentHeight * orientedData.scale.y) / child.baseHeight;\r\n\r\n      let scaleX: number;\r\n      let scaleY: number;\r\n      if (orientedData.scale.fit === \"min\") {\r\n        scaleX = scaleY = Math.min(widthRatio, heightRatio);\r\n      } else if (orientedData.scale.fit === \"max\") {\r\n        scaleX = scaleY = Math.max(widthRatio, heightRatio);\r\n      } else {\r\n        scaleX = widthRatio;\r\n        scaleY = heightRatio;\r\n      }\r\n\r\n      child.scale.set(scaleX, scaleY);\r\n    }\r\n  }\r\n\r\n  private locateChildWithResizeData(child: Container): void {\r\n    const orientedData = window.innerWidth > window.innerHeight && child.resizeData?.landscape ? child.resizeData?.landscape : child.resizeData?.portrait;\r\n\r\n    const childParent = child.parent as Container;\r\n\r\n    const position = new Point();\r\n    const parentWidth = childParent.baseWidth;\r\n    const parentHeight = childParent.baseHeight;\r\n    const childWidth = child.baseWidth * child.scale.x;\r\n    const childHeight = child.baseHeight * child.scale.y;\r\n\r\n    if (orientedData?.align) {\r\n      if (orientedData.align?.x === \"left\") {\r\n        position.x = 0;\r\n      } else if (orientedData.align?.x === \"center\") {\r\n        position.x = parentWidth * 0.5;\r\n      } else if (orientedData.align?.x === \"right\") {\r\n        position.x = parentWidth;\r\n      }\r\n\r\n      if (orientedData.align?.y === \"top\") {\r\n        position.y = 0;\r\n      } else if (orientedData.align?.y === \"center\") {\r\n        position.y = parentHeight * 0.5;\r\n      } else if (orientedData.align?.y === \"bottom\") {\r\n        position.y = parentHeight;\r\n      }\r\n    }\r\n\r\n    if (orientedData?.offset) {\r\n      if (orientedData.offset?.unit === \"px\") {\r\n        position.x += orientedData.offset.x;\r\n        position.y += orientedData.offset.y;\r\n      } else if (orientedData.offset?.unit === \"pct\") {\r\n        position.x += parentWidth * orientedData.offset.x;\r\n        position.y += parentHeight * orientedData.offset.y;\r\n      } else if (orientedData.offset?.unit === \"self\") {\r\n        position.x += childWidth * orientedData.offset.x;\r\n        position.y += childHeight * orientedData.offset.y;\r\n      }\r\n    }\r\n\r\n    child.position.set(position.x, position.y);\r\n  }\r\n\r\n  private getAllChildren(container: Container): Container[] {\r\n    let children: Container[] = [];\r\n    container.children.forEach((child) => {\r\n      children.push(child);\r\n      if (child instanceof Container) {\r\n        children = children.concat(this.getAllChildren(child));\r\n      }\r\n    });\r\n    return children;\r\n  }\r\n}\r\n"],"names":["HTMLContainer","PIXI","config","__publicField","_a","_b","_c","_d","debugColors","debugGraphics","generateColors","child","i","wrapper","rect","parent","args","count","startColor","endColor","colors","startR","startG","startB","endR","endG","endB","t","r","g","b","color","Responsive","renderer","stage","width","height","childParent","orientedData","parentWidth","parentHeight","widthRatio","heightRatio","scaleX","scaleY","_e","_f","_g","_h","_i","_j","_k","_l","position","Point","childWidth","childHeight","container","children","Container"],"mappings":";;;;;;;;wOAGO,MAAMA,UAAsBC,EAAK,SAAU,CAqDhD,YAAYC,EAA6B,CACvC,MAAM,EAjDRC,EAAA,KAAO,SAAA,EAKPA,EAAA,KAAO,eAA8B,CAAA,GAKrCA,EAAA,KAAQ,cAKRA,EAAAA,EAAA,KAAQ,aAAA,EAKRA,EAAA,KAAQ,WAAA,EAWRA,EAAA,KAAQ,SAIJ,CACA,QAAS,GACT,OAAQ,QACR,OAAQ,OACV,CAAA,EAYA,KAAK,OAASD,EAAO,MAGrB,KAAK,aAAeA,EAAO,KAAK,QAAQ,MAAO,EAAE,EAAE,QAAQ,UAAW,EAAE,EACxE,KAAK,YAAcA,EAAO,IAAI,QAAQ,MAAO,EAAE,EAAE,QAAQ,UAAW,EAAE,EAEtE,KAAK,oBACL,KAAK,UAAU,EACf,KAAK,iBACL,EAAA,KAAK,oBAAoB,KAAK,OAAO,EACrC,KAAK,UAAA,CACP,CAKQ,mBAAoB,CAC1B,KAAK,QAAU,SAAS,cAAc,KAAK,EAC3C,KAAK,QAAQ,MAAM,cAAgB,OACnC,KAAK,QAAQ,MAAM,SAAW,WAC9B,KAAK,QAAQ,MAAM,IAAM,IACzB,KAAK,QAAQ,MAAM,KAAO,IAC1B,KAAK,QAAQ,MAAM,MAAQ,OAC3B,KAAK,QAAQ,MAAM,OAAS,OAC5B,KAAK,QAAQ,UAAY,KAAK,YAChC,CAKQ,WAAY,CAClB,KAAK,UAAY,SAAS,cAAc,OAAO,EAC/C,KAAK,UAAU,YAAc,KAAK,YAClC,SAAS,KAAK,YAAY,KAAK,SAAS,CAC1C,CAKQ,kBAAmB,CACzB,SAAS,KAAK,YAAY,KAAK,OAAO,CACxC,CAKQ,WAAY,CAzGtB,IAAAE,EAAAC,EAAAC,EAAAC,EA0GI,IAAIC,EAAwB,CAAA,EACxBC,EAAgB,MAEhBL,EAAA,KAAK,SAAL,MAAAA,EAAa,UACfK,EAAgB,IAAIR,EAAK,SACzBQ,EAAc,MAAQ,gBACtB,KAAK,WAAWA,EAAe,CAAC,GAGlC,KAAK,OAAS,IAAM,CAnHxB,IAAAL,GAoHUA,EAAA,KAAK,SAAL,MAAAA,EAAa,SACfK,EAAc,MAAA,CAElB,GAEIJ,EAAA,KAAK,SAAL,MAAAA,EAAa,UACfG,EAAcE,EAAe,KAAK,aAAa,QAAQJ,EAAA,KAAK,SAAL,KAAAA,OAAAA,EAAa,QAAQC,EAAA,KAAK,SAAL,KAAAA,OAAAA,EAAa,MAAM,GAGjG,KAAK,aAAa,QAAQ,CAACI,EAAOC,IAAM,CACtC,MAAMC,EAAU,IAAIZ,EAAK,UAEzB,KAAK,SAASY,CAAO,EACrBA,EAAQ,MAAQF,EAAM,IAAMA,EAAM,WAAa,WAAWC,CAAC,GAE3DC,EAAQ,OAAS,IAAM,CAnI7B,IAAAT,EAoIQ,MAAMU,EAAOH,EAAM,sBAAsB,EACzCE,EAAQ,UAAYC,EAAK,MACzBD,EAAQ,WAAaC,EAAK,OAC1BD,EAAQ,SAAS,IAAIC,EAAK,EAAGA,EAAK,CAAC,GAU/BV,EAAA,KAAK,SAAL,MAAAA,EAAa,UACfK,EAAc,KAAKK,EAAK,EAAGA,EAAK,EAAGA,EAAK,MAAOA,EAAK,MAAM,EAC1DL,EAAc,KAAK,CAAE,MAAOD,EAAYI,CAAC,CAAE,CAAC,EAEhD,EAEAC,EAAQ,OAAO,CACjB,CAAC,CACH,CAMQ,oBAAoBE,EAAqB,CAC/C,QAASH,EAAI,EAAGA,EAAIG,EAAO,SAAS,OAAQH,IAAK,CAC/C,MAAMD,EAAQI,EAAO,SAASH,CAAC,EAC3BD,EAAM,UAAY,QAGtB,KAAK,aAAa,KAAKA,CAAK,EAC5B,KAAK,oBAAoBA,CAAK,EAChC,CACF,CAKO,WAAWK,EAAmB,CAEnC,MAAM,QAAQ,GAAGA,CAAI,EAEjB,KAAK,QAAQ,eACf,KAAK,QAAQ,cAAc,YAAY,KAAK,OAAO,EAGjD,KAAK,UAAU,eACjB,KAAK,UAAU,cAAc,YAAY,KAAK,SAAS,CAE3D,CACF,CASA,SAASN,EAAeO,EAAeC,EAAoBC,EAA4B,CACrF,MAAMC,EAAS,CAAA,EACTC,EAAUH,GAAc,GAAM,IAC9BI,EAAUJ,GAAc,EAAK,IAC7BK,EAASL,EAAa,IAEtBM,EAAQL,GAAY,GAAM,IAC1BM,EAAQN,GAAY,EAAK,IACzBO,EAAOP,EAAW,IAExB,QAASP,EAAI,EAAGA,EAAIK,EAAOL,IAAK,CAC9B,MAAMe,EAAIf,GAAKK,EAAQ,GACjBW,EAAI,KAAK,MAAMP,EAASM,GAAKH,EAAOH,EAAO,EAC3CQ,EAAI,KAAK,MAAMP,EAASK,GAAKF,EAAOH,EAAO,EAC3CQ,EAAI,KAAK,MAAMP,EAASI,GAAKD,EAAOH,EAAO,EAC3CQ,EAASH,GAAK,GAAOC,GAAK,EAAKC,EACrCV,EAAO,KAAKW,CAAK,CACnB,CACA,OAAOX,CACT,mKCnNaY,CAAW,CAGtB,YAAYC,EAAuCC,EAAkB,CAFrE/B,EAAA,KACAA,UAAAA,EAAAA,EAAA,KAEE,OAAA,EAAA,KAAK,SAAW8B,EAChB,KAAK,MAAQC,EACb,OAAO,iBAAiB,SAAU,KAAK,OAAO,KAAK,IAAI,CAAC,EAExD,KAAK,OAAA,CACP,CAEO,QAAe,CACpB,MAAMC,EAAgB,OAAO,WACvBC,EAAiB,OAAO,YAE9B,KAAK,SAAS,OAAOD,EAAOC,CAAM,EAClC,KAAK,MAAM,UAAYD,EACvB,KAAK,MAAM,WAAaC,EAExB,KAAK,eAAe,KAAK,KAAK,EAAE,QAASzB,GAAU,CACjD,MAAM0B,EAAc1B,EAAM,OAErB0B,IAEA1B,EAAM,SACTA,EAAM,OAAS,IAAM,KAAK,gBAAgBA,CAAK,GAGjDA,EAAM,OAAO0B,EAAY,UAAWA,EAAY,UAAU,EAC5D,CAAC,CACH,CAEQ,gBAAgB1B,EAAkB,CACxC,KAAK,yBAAyBA,CAAK,EACnC,KAAK,0BAA0BA,CAAK,CACtC,CAGQ,yBAAyBA,EAAwB,CAxC3D,IAAAP,EAAAC,EAAAC,EAyCI,MAAMgC,EAAe,OAAO,WAAa,OAAO,cAAelC,EAAAO,EAAM,aAAN,MAAAP,EAAkB,WAAYC,EAAAM,EAAM,aAAN,YAAAN,EAAkB,WAAYC,EAAAK,EAAM,aAAN,KAAA,OAAAL,EAAkB,SAE7I,GAAI,EAACgC,GAAA,MAAAA,EAAc,OAAO,OAE1B,MAAMD,EAAc1B,EAAM,OAE1B,GAAI2B,EAAa,MAAM,OAAS,WAC9B3B,EAAM,MAAM,IAAI2B,EAAa,MAAM,EAAGA,EAAa,MAAM,CAAC,MACrD,CACL,MAAMC,EAAcF,EAAY,UAC1BG,EAAeH,EAAY,WAC3BI,EAAcF,EAAcD,EAAa,MAAM,EAAK3B,EAAM,UAC1D+B,EAAeF,EAAeF,EAAa,MAAM,EAAK3B,EAAM,WAElE,IAAIgC,EACAC,EACAN,EAAa,MAAM,MAAQ,MAC7BK,EAASC,EAAS,KAAK,IAAIH,EAAYC,CAAW,EACzCJ,EAAa,MAAM,MAAQ,MACpCK,EAASC,EAAS,KAAK,IAAIH,EAAYC,CAAW,GAElDC,EAASF,EACTG,EAASF,GAGX/B,EAAM,MAAM,IAAIgC,EAAQC,CAAM,CAChC,CACF,CAEQ,0BAA0BjC,EAAwB,CAtE5D,IAAAP,EAAAC,EAAAC,EAAAC,EAAAsC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAuEI,MAAMd,EAAe,OAAO,WAAa,OAAO,cAAelC,EAAAO,EAAM,aAAN,MAAAP,EAAkB,WAAYC,EAAAM,EAAM,aAAN,KAAAN,OAAAA,EAAkB,WAAYC,EAAAK,EAAM,aAAN,KAAA,OAAAL,EAAkB,SAEvI+B,EAAc1B,EAAM,OAEpB0C,EAAW,IAAIC,EACff,EAAcF,EAAY,UAC1BG,EAAeH,EAAY,WAC3BkB,EAAa5C,EAAM,UAAYA,EAAM,MAAM,EAC3C6C,EAAc7C,EAAM,WAAaA,EAAM,MAAM,EAE/C2B,GAAA,MAAAA,EAAc,UACZ/B,EAAA+B,EAAa,QAAb,KAAA/B,OAAAA,EAAoB,KAAM,OAC5B8C,EAAS,EAAI,IACJR,EAAAP,EAAa,QAAb,KAAA,OAAAO,EAAoB,KAAM,SACnCQ,EAAS,EAAId,EAAc,KAClBO,EAAAR,EAAa,QAAb,KAAAQ,OAAAA,EAAoB,KAAM,UACnCO,EAAS,EAAId,KAGXQ,EAAAT,EAAa,QAAb,KAAA,OAAAS,EAAoB,KAAM,MAC5BM,EAAS,EAAI,IACJL,EAAAV,EAAa,QAAb,KAAA,OAAAU,EAAoB,KAAM,SACnCK,EAAS,EAAIb,EAAe,KACnBS,EAAAX,EAAa,QAAb,KAAA,OAAAW,EAAoB,KAAM,WACnCI,EAAS,EAAIb,IAIbF,GAAA,MAAAA,EAAc,WACZY,EAAAZ,EAAa,SAAb,KAAA,OAAAY,EAAqB,QAAS,MAChCG,EAAS,GAAKf,EAAa,OAAO,EAClCe,EAAS,GAAKf,EAAa,OAAO,KACzBa,EAAAb,EAAa,SAAb,KAAA,OAAAa,EAAqB,QAAS,OACvCE,EAAS,GAAKd,EAAcD,EAAa,OAAO,EAChDe,EAAS,GAAKb,EAAeF,EAAa,OAAO,KACxCc,EAAAd,EAAa,SAAb,YAAAc,EAAqB,QAAS,SACvCC,EAAS,GAAKE,EAAajB,EAAa,OAAO,EAC/Ce,EAAS,GAAKG,EAAclB,EAAa,OAAO,IAIpD3B,EAAM,SAAS,IAAI0C,EAAS,EAAGA,EAAS,CAAC,CAC3C,CAEQ,eAAeI,EAAmC,CACxD,IAAIC,EAAwB,CAC5B,EAAA,OAAAD,EAAU,SAAS,QAAS9C,GAAU,CACpC+C,EAAS,KAAK/C,CAAK,EACfA,aAAiBgD,IACnBD,EAAWA,EAAS,OAAO,KAAK,eAAe/C,CAAK,CAAC,EAEzD,CAAC,EACM+C,CACT,CACF"}